<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Doo Tallks</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      background: #0f172a;
      color: #f1f5f9;
      font-family: 'Segoe UI', sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      padding: 20px;
    }
    h1 {
      font-size: 3rem;
      margin-bottom: 20px;
      color: #38bdf8;
    }
    button {
      background: #1e293b;
      color: #f1f5f9;
      font-size: 1.2rem;
      padding: 12px 24px;
      border: 2px solid #38bdf8;
      border-radius: 10px;
      cursor: pointer;
      transition: 0.3s ease;
    }
    button:hover {
      background: #38bdf8;
      color: #0f172a;
    }
    p {
      margin-top: 20px;
      font-size: 1.1rem;
      color: #94a3b8;
    }
    .loader {
      border: 4px solid #1e293b;
      border-top: 4px solid #38bdf8;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
      margin: 20px auto;
      display: none;
    }
    .show {
      display: block;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    @media (max-width: 600px) {
      h1 {
        font-size: 2.2rem;
      }
      button {
        font-size: 1rem;
        padding: 10px 20px;
      }
    }
  </style>
</head>
<body>
  <h1>Doo Tallks ü§ñ</h1>
  <button onclick="startWakeWord()">üéôÔ∏è Say 'Hey dude'</button>
  <div class="loader" id="loader"></div>
  <p id="output">Awaiting "Hey dude"...</p>

  <script>
    const output = document.getElementById("output");
    const loader = document.getElementById("loader");

    function showLoader(text) {
      loader.classList.add("show");
      output.textContent = text;
    }

    function hideLoader() {
      loader.classList.remove("show");
    }

    function startWakeWord() {
      const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
      recognition.lang = 'en-US';

      recognition.onstart = () => {
        showLoader("üéß Listening for 'Hey dude'...");
      };

      recognition.onresult = function(event) {
        hideLoader();
        const transcript = event.results[0][0].transcript.toLowerCase();
        output.textContent = `You said: "${transcript}"`;

        if (transcript.includes("hey dude")) {
          showLoader("üé§ Listening for command...");
          startCommandMode();
        } else {
          output.textContent = "Say 'Hey dude' to activate.";
        }
      };

      recognition.onerror = () => {
        hideLoader();
        output.textContent = "Mic error. Please allow mic access.";
      };

      recognition.start();
    }

    function startCommandMode() {
      const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
      recognition.lang = 'en-US';

      recognition.onstart = () => {
        showLoader("üé§ Listening for command...");
      };

      recognition.onresult = function(event) {
        hideLoader();
        const command = event.results[0][0].transcript.toLowerCase();
        output.textContent = `Command: "${command}"`;

        if (command.includes("youtube")) {
          window.open("https://youtube.com", "_blank");
        } else if (command.includes("free fire")) {
          window.open("https://play.google.com/store/apps/details?id=com.dts.freefireth", "_blank");
        } else if (command.includes("chrome")) {
          output.textContent = "Bhai tu toh already Chrome pe hai! üòÇ";
        } else if (command.includes("time")) {
          const now = new Date();
          output.textContent = "Time is: " + now.toLocaleTimeString();
        } else if (command.includes("hello")) {
          output.textContent = "Hello bro! üòé";
        }

        // üí¨ Smart Q&A Section
        else if (command.includes("your name")) {
          output.textContent = "I am Doo Tallks ‚Äî your AI buddy üòé";
        } else if (command.includes("how are you")) {
          output.textContent = "I'm feeling smart today! üí°";
        } else if (command.includes("what can you do")) {
          output.textContent = "I can open apps, tell time, and follow your voice commands!";
        }

        else {
          output.textContent = "Command not recognized.";
        }
      };

      recognition.onerror = () => {
        hideLoader();
        output.textContent = "Mic error. Try again.";
      };

      recognition.start();
    }
  </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Doo Tallks</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      background: #0f172a;
      color: #f1f5f9;
      font-family: 'Segoe UI', sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      padding: 20px;
    }
    h1 {
      font-size: 3rem;
      margin-bottom: 20px;
      color: #38bdf8;
    }
    button {
      background: #1e293b;
      color: #f1f5f9;
      font-size: 1.2rem;
      padding: 12px 24px;
      border: 2px solid #38bdf8;
      border-radius: 10px;
      cursor: pointer;
      transition: 0.3s ease;
    }
    button:hover {
      background: #38bdf8;
      color: #0f172a;
    }
    p {
      margin-top: 20px;
      font-size: 1.1rem;
      color: #94a3b8;
    }
    .loader {
      border: 4px solid #1e293b;
      border-top: 4px solid #38bdf8;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
      margin: 20px auto;
      display: none;
    }
    .show {
      display: block;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    @media (max-width: 600px) {
      h1 {
        font-size: 2.2rem;
      }
      button {
        font-size: 1rem;
        padding: 10px 20px;
      }
    }
  </style>
</head>
<body>
  <h1>Doo Tallks ü§ñ</h1>
  <button onclick="startWakeWord()">üéôÔ∏è Say 'Hey dude'</button>
  <div class="loader" id="loader"></div>
  <p id="output">Awaiting "Hey dude"...</p>

  <script>
    const output = document.getElementById("output");
    const loader = document.getElementById("loader");

    function showLoader(text) {
      loader.classList.add("show");
      output.textContent = text;
    }

    function hideLoader() {
      loader.classList.remove("show");
    }

    function startWakeWord() {
      const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
      recognition.lang = 'en-US';

      recognition.onstart = () => {
        showLoader("üéß Listening for 'Hey dude'...");
      };

      recognition.onresult = function(event) {
        hideLoader();
        const transcript = event.results[0][0].transcript.toLowerCase();
        output.textContent = `You said: "${transcript}"`;

        if (transcript.includes("hey dude")) {
          showLoader("üé§ Listening for command...");
          startCommandMode();
        } else {
          output.textContent = "Say 'Hey dude' to activate.";
        }
      };

      recognition.onerror = () => {
        hideLoader();
        output.textContent = "Mic error. Please allow mic access.";
      };

      recognition.start();
    }

    function startCommandMode() {
      const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
      recognition.lang = 'en-US';

      recognition.onstart = () => {
        showLoader("üé§ Listening for command...");
      };

      recognition.onresult = function(event) {
        hideLoader();
        const command = event.results[0][0].transcript.toLowerCase();
        output.textContent = `Command: "${command}"`;

        if (command.includes("youtube")) {
          window.open("https://youtube.com", "_blank");
        } else if (command.includes("free fire")) {
          window.open("https://play.google.com/store/apps/details?id=com.dts.freefireth", "_blank");
        } else if (command.includes("chrome")) {
          output.textContent = "Bhai tu toh already Chrome pe hai! üòÇ";
        } else if (command.includes("time")) {
          const now = new Date();
          output.textContent = "Time is: " + now.toLocaleTimeString();
        } else if (command.includes("hello")) {
          output.textContent = "Hello bro! üòé";
        }

        // üí¨ Smart Q&A Section
        else if (command.includes("your name")) {
          output.textContent = "I am Doo Tallks ‚Äî your AI buddy üòé";
        } else if (command.includes("how are you")) {
          output.textContent = "I'm feeling smart today! üí°";
        } else if (command.includes("what can you do")) {
          output.textContent = "I can open apps, tell time, and follow your voice commands!";
        }

        else {
          output.textContent = "Command not recognized.";
        }
      };

      recognition.onerror = () => {
        hideLoader();
        output.textContent = "Mic error. Try again.";
      };

      recognition.start();
    }
  </script>
</body>
</html>
